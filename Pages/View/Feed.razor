@page "/main"
@page "/c/{CategorySlug}/posts"

@using Blogb.Authentication;
@using Blogb.Data.Entities
@using Blogb.Services;
@inject BlogPostService BlogPostService
@inject CategoryService CategoryService

<PageTitle>@heading | Blog</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-sm-9">
            <h1 class="fs-3">@heading</h1>
            <hr />
            @if (isLoading)
            {
                <p>Loading posts...</p>
            }
            else if (!posts.Any())
            {
                <div class="d-flex justify-content-center flex-column align-items-center" style="min-height: 250px">
                    <h3>No blog posts found</h3>
                    <AuthorizeView>
                        <Authorized>
                            <NavLink href="/admin/manage-blogs/new" class="btn btn-primary">Click here to create a new blog post</NavLink>
                        </Authorized>
                        <NotAuthorized>
                            <p>Please check back later</p>
                        </NotAuthorized>
                    </AuthorizeView>
                </div>
            }
            else
            {
                <BlogPostsList Posts="posts" />
            }
        </div>

        <div class="col-sm-3">
            <CategoriesBox CategorySlug="@CategorySlug" OnCategoryNameFound="SetHeading" />
        </div>
    </div>
</div>

@code {
    [Parameter] public string? CategorySlug { get; set; }

    private string heading = "Latest Posts";
    private IEnumerable<BlogPost> posts = Enumerable.Empty<BlogPost>();
    private bool isLoading = true;

    protected override async Task OnParametersSetAsync() => await LoadPostsAsync();

    private async Task LoadPostsAsync()
    {
        isLoading = true;
        try
        {
            posts = await BlogPostService.GetPostsAsync(publishedOnly: true, CategorySlug);
        }
        finally
        {
            isLoading = false;
        }
    }

    private void SetHeading(string? categoryName = null)
    {
        heading = !string.IsNullOrWhiteSpace(categoryName) ? $"Latest {categoryName} Posts" : "Latest Posts";
    }
}
